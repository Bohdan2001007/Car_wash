from typing import List


class Car:
    def __init__(self, comfort_class, clean_mark, brand):
        self.comfort_class = comfort_class
        self.clean_mark = clean_mark
        self.brand = brand


class CarWashStation:
    def __init__(self, distance_from_city_center, clean_power, average_rating, count_of_ratings):
        self.distance_from_city_center = distance_from_city_center
        self.clean_power = clean_power
        self.average_rating = average_rating
        self.count_of_ratings = count_of_ratings

    def serve_cars(self, cars: List[Car]):
        amount = 0
        for car in cars:
            if car.clean_mark < self.clean_power:  # 1) 3 * (7 - 3) * (3,9 / 6) = 7,8
                self.wash_single_car(car)          # 2) 4 * (7 - 5) * (3,9 / 6) = 5,2
                amount += self.calculate_washing_price(car) # 3) clean_power < clean_mark 7,8 + 5,2 = 13
        return amount

    def calculate_washing_price(self, car: Car):
        profit_for_one_car = (car.comfort_class * (self.clean_power - car.clean_mark) * (
                    self.average_rating / self.distance_from_city_center))
        return round(profit_for_one_car, 1)
# 3

    def wash_single_car(self, car):
        if self.clean_power >= car.clean_mark:
            car.clean_mark = self.clean_power
            return car.clean_mark

    def rate_service(self, mark):
        self.average_rating = round((self.average_rating * self.count_of_ratings + mark) / (self.count_of_ratings + 1), 1)
        self.count_of_ratings += 1
        return self.average_rating
